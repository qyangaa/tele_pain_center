[{"/home/arkyyang/files/webdev/tele_pain_center/src/index.js":"1","/home/arkyyang/files/webdev/tele_pain_center/src/App.js":"2","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/calendar.jsx":"3","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/providers.jsx":"4","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/tracking.jsx":"5","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/notFound.jsx":"6","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/records.jsx":"7","/home/arkyyang/files/webdev/tele_pain_center/src/components/UI/navBar.jsx":"8","/home/arkyyang/files/webdev/tele_pain_center/src/services/providerService.js":"9","/home/arkyyang/files/webdev/tele_pain_center/src/services/FilterService.js":"10","/home/arkyyang/files/webdev/tele_pain_center/src/components/UI/searchBox.jsx":"11","/home/arkyyang/files/webdev/tele_pain_center/src/components/UI/CollapsibleList.jsx":"12","/home/arkyyang/files/webdev/tele_pain_center/src/components/common/cardDeck.jsx":"13","/home/arkyyang/files/webdev/tele_pain_center/src/services/data/providerData.js":"14","/home/arkyyang/files/webdev/tele_pain_center/src/components/common/cardItem.jsx":"15","/home/arkyyang/files/webdev/tele_pain_center/src/components/UI/Pagination.jsx":"16","/home/arkyyang/files/webdev/tele_pain_center/src/utils/paginate.js":"17","/home/arkyyang/files/webdev/tele_pain_center/src/services/authService.js":"18","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/Registration.jsx":"19","/home/arkyyang/files/webdev/tele_pain_center/src/contexts/AuthContext.js":"20","/home/arkyyang/files/webdev/tele_pain_center/src/services/Firebase/firebase.js":"21","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/Login.jsx":"22","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/Dashboard.jsx":"23","/home/arkyyang/files/webdev/tele_pain_center/src/components/common/ProtectedRoute.jsx":"24","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/ForgotPassword.jsx":"25","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/UpdateProfile.jsx":"26","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/Chat.jsx":"27","/home/arkyyang/files/webdev/tele_pain_center/src/components/common/Message.js":"28","/home/arkyyang/files/webdev/tele_pain_center/src/services/ChatService.js":"29","/home/arkyyang/files/webdev/tele_pain_center/src/redux/configureStore.js":"30","/home/arkyyang/files/webdev/tele_pain_center/src/redux/filtersReducer.js":"31","/home/arkyyang/files/webdev/tele_pain_center/src/redux/providersReducer.js":"32","/home/arkyyang/files/webdev/tele_pain_center/src/services/data/filtersData.js":"33","/home/arkyyang/files/webdev/tele_pain_center/src/redux/ActionTypes.js":"34","/home/arkyyang/files/webdev/tele_pain_center/src/components/common/Loading.jsx":"35","/home/arkyyang/files/webdev/tele_pain_center/src/redux/ProvidersActions.js":"36","/home/arkyyang/files/webdev/tele_pain_center/src/redux/ProvidersActionCreators.js":"37","/home/arkyyang/files/webdev/tele_pain_center/src/redux/messagesReducer.js":"38","/home/arkyyang/files/webdev/tele_pain_center/src/redux/chatGroupsReducer.js":"39","/home/arkyyang/files/webdev/tele_pain_center/src/redux/ChatActions.js":"40","/home/arkyyang/files/webdev/tele_pain_center/src/redux/ChatActionCreator.js":"41","/home/arkyyang/files/webdev/tele_pain_center/src/redux/curGroupReducer.js":"42","/home/arkyyang/files/webdev/tele_pain_center/src/redux/UserActions.js":"43","/home/arkyyang/files/webdev/tele_pain_center/src/redux/UserActionCreator.js":"44"},{"size":211,"mtime":1610587494236,"results":"45","hashOfConfig":"46"},{"size":2762,"mtime":1611614023148,"results":"47","hashOfConfig":"46"},{"size":176,"mtime":1610587494236,"results":"48","hashOfConfig":"46"},{"size":6124,"mtime":1611534846021,"results":"49","hashOfConfig":"46"},{"size":178,"mtime":1611611586478,"results":"50","hashOfConfig":"46"},{"size":111,"mtime":1610587494236,"results":"51","hashOfConfig":"46"},{"size":174,"mtime":1610587494236,"results":"52","hashOfConfig":"46"},{"size":960,"mtime":1610587494236,"results":"53","hashOfConfig":"46"},{"size":581,"mtime":1611610839631,"results":"54","hashOfConfig":"46"},{"size":816,"mtime":1610587494236,"results":"55","hashOfConfig":"46"},{"size":326,"mtime":1610587494236,"results":"56","hashOfConfig":"46"},{"size":1312,"mtime":1610587494236,"results":"57","hashOfConfig":"46"},{"size":239,"mtime":1610587494236,"results":"58","hashOfConfig":"46"},{"size":3538,"mtime":1611175177694,"results":"59","hashOfConfig":"46"},{"size":1504,"mtime":1610587494236,"results":"60","hashOfConfig":"46"},{"size":1685,"mtime":1611244723669,"results":"61","hashOfConfig":"46"},{"size":193,"mtime":1610587494236,"results":"62","hashOfConfig":"46"},{"size":785,"mtime":1611620003733,"results":"63","hashOfConfig":"46"},{"size":2803,"mtime":1611616333880,"results":"64","hashOfConfig":"46"},{"size":2283,"mtime":1611612098761,"results":"65","hashOfConfig":"46"},{"size":1230,"mtime":1611615734406,"results":"66","hashOfConfig":"46"},{"size":2124,"mtime":1611619845659,"results":"67","hashOfConfig":"46"},{"size":1099,"mtime":1610587494236,"results":"68","hashOfConfig":"46"},{"size":461,"mtime":1610587494236,"results":"69","hashOfConfig":"46"},{"size":1992,"mtime":1610587494236,"results":"70","hashOfConfig":"46"},{"size":3094,"mtime":1610587494236,"results":"71","hashOfConfig":"46"},{"size":3739,"mtime":1611630207897,"results":"72","hashOfConfig":"46"},{"size":565,"mtime":1611620299644,"results":"73","hashOfConfig":"46"},{"size":2038,"mtime":1611620173840,"results":"74","hashOfConfig":"46"},{"size":927,"mtime":1611613946675,"results":"75","hashOfConfig":"46"},{"size":183,"mtime":1611179007632,"results":"76","hashOfConfig":"46"},{"size":749,"mtime":1611367415756,"results":"77","hashOfConfig":"46"},{"size":720,"mtime":1611179096697,"results":"78","hashOfConfig":"46"},{"size":916,"mtime":1611611679974,"results":"79","hashOfConfig":"46"},{"size":224,"mtime":1611367242687,"results":"80","hashOfConfig":"46"},{"size":254,"mtime":1611528133009,"results":"81","hashOfConfig":"46"},{"size":692,"mtime":1611528066717,"results":"82","hashOfConfig":"46"},{"size":687,"mtime":1611534591926,"results":"83","hashOfConfig":"46"},{"size":669,"mtime":1611536638560,"results":"84","hashOfConfig":"46"},{"size":492,"mtime":1611532832932,"results":"85","hashOfConfig":"46"},{"size":1361,"mtime":1611610545970,"results":"86","hashOfConfig":"46"},{"size":678,"mtime":1611537653884,"results":"87","hashOfConfig":"46"},{"size":258,"mtime":1611611902975,"results":"88","hashOfConfig":"46"},{"size":578,"mtime":1611611818755,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"3ue2e5",{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"/home/arkyyang/files/webdev/tele_pain_center/src/index.js",[],["195","196"],"/home/arkyyang/files/webdev/tele_pain_center/src/App.js",["197"],"import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Calendar from \"./components/pages/calendar\";\nimport Chat from \"./components/pages/Chat\";\nimport Registration from \"./components/pages/Registration\";\nimport Providers from \"./components/pages/providers\";\nimport Tracking from \"./components/pages/tracking\";\nimport NavBar from \"./components/UI/navBar\";\nimport NotFound from \"./components/pages/notFound\";\nimport Dashboard from \"./components/pages/Dashboard\";\nimport ForgotPassword from \"./components/pages/ForgotPassword\";\n\nimport \"./App.css\";\nimport Records from \"./components/pages/records\";\nimport { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport Login from \"./components/pages/Login\";\nimport ProtectedRoute from \"./components/common/ProtectedRoute\";\nimport UpdateProfile from \"./components/pages/UpdateProfile\";\nimport { Provider } from \"react-redux\";\nimport { ConfigureStore } from \"./redux/configureStore\";\n\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { getRrfProps } from \"./services/Firebase/firebase\";\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  state = {};\n  render() {\n    const { user } = this.state;\n\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          {console.log(\".env test:\", process.env.REACT_APP_TEST)}\n          {console.log({ ...getRrfProps(store) })}\n          <ToastContainer />\n          <NavBar user={user} />\n          <Container fluid>\n            <ReactReduxFirebaseProvider {...getRrfProps(store)}>\n              <Switch>\n                <Route path=\"/calendar\" component={Calendar} />\n                <Route path=\"/chat\" component={Chat} />\n                <Route path=\"/registration\" component={Registration} />\n                <ProtectedRoute path=\"/dashboard\" component={Dashboard} />\n                <ProtectedRoute\n                  path=\"/update-profile\"\n                  component={UpdateProfile}\n                />\n                <Route path=\"/forgot-password\" component={ForgotPassword} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/search\" component={Providers} />\n                <Route path=\"/tracking\" component={Tracking} />\n                <Route path=\"/records\" component={Records} />\n                <Route path=\"/not-found\" component={NotFound} />\n                <Redirect from=\"/\" exact to=\"/tracking\" />\n                <Redirect to=\"/not-found\" />\n              </Switch>\n            </ReactReduxFirebaseProvider>\n          </Container>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/calendar.jsx",[],"/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/providers.jsx",["198","199","200","201","202","203","204","205","206"],"import React, { Component, useEffect, useState } from \"react\";\n\nimport exampleImg from \"../../services/data/pictures/exampleImg.jpeg\";\nimport CardDeck from \"../common/cardDeck\";\nimport SearchBox from \"../UI/searchBox\";\nimport getFilters from \"../../services/FilterService\";\nimport CollapsibleList from \"../UI/CollapsibleList\";\nimport Pagination from \"../UI/Pagination\";\nimport Loading from \"../common/Loading\";\n\nimport { paginate } from \"../../utils/paginate\";\nimport { db } from \"../../services/Firebase/firebase\";\nimport providerActions from \"../../redux/ProvidersActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport GetProviders from \"../../services/providerService\";\n\nimport { PROVIDERS } from \"../../services/data/providerData\";\n\nexport default function Providers() {\n  // const [providers, setProviders] = useState([]);\n  const providersState = useSelector((state) => state.providersState);\n\n  // const [filters, setFilters] = useState(getFilters());\n  const filters = useSelector((state) => state.filters);\n  const dispatch = useDispatch();\n\n  const [selectedFilters, setSelectedFilters] = useState([]);\n\n  const [smallWindow, setSmallWindow] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(5);\n  const [button2, setButton2] = useState({\n    text: \"Message\",\n    onClick: (item) => () => handleMessage(item),\n  });\n\n  useEffect(() => {\n    //componentDidMount\n    updateDimensions();\n    window.addEventListener(\"resize\", updateDimensions);\n    GetProviders(dispatch);\n  }, []);\n\n  useEffect(() => {\n    console.log(\"providers:\", { providers: providersState.providers });\n  }, [providersState]);\n\n  useEffect(() => {\n    //componnetWillUnmount\n\n    return () => {\n      window.removeEventListener(\"resize\", updateDimensions);\n    };\n  }, []);\n\n  const handleMessage = (item) => {\n    console.log(\"clicked:\", item);\n  };\n\n  const updateDimensions = () => {\n    if (window.innerWidth < 800) {\n      setSmallWindow(true);\n    } else {\n      setSmallWindow(false);\n    }\n  };\n\n  const handleSelect = (item) => {\n    // item: \"filter_id:item_id\"\n    let selected = [...selectedFilters];\n    if (!selected.includes(item)) {\n      selected.push(item);\n    } else {\n      selected = selectedFilters.filter((i) => i !== item);\n    }\n    setSelectedFilters(selected);\n  };\n\n  const handleSearch = (query) => {\n    if (query != searchQuery) {\n      setSearchQuery(query);\n    }\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const obtainFilters = () => {\n    const groupedFilters = {};\n    for (const key of selectedFilters) {\n      const splitKey = key.split(\":\");\n      const group = filters.filter((group) => group._id === splitKey[0])[0];\n      const item = group.options.filter((item) => item._id === splitKey[1])[0];\n      if (group._id in groupedFilters) {\n        groupedFilters[group._id].push(item);\n      } else {\n        groupedFilters[group._id] = [item];\n      }\n    }\n    return groupedFilters;\n  };\n\n  const filterSearch = (searchQuery, provider) => {\n    if (!searchQuery) {\n      return true;\n    }\n    const searchFields = [\n      \"address\",\n      \"city\",\n      \"description\",\n      \"name\",\n      \"specialty\",\n    ];\n    for (const field of searchFields) {\n      if (provider[field].toLowerCase().includes(searchQuery.toLowerCase())) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const getPagedData = () => {\n    // provider: group_id: name\n    let filteredProviders = providersState.providers;\n    if (filteredProviders == null) {\n      return { itemsCount: 0, data: [] };\n    }\n    if (searchQuery) {\n      filteredProviders = filteredProviders.filter((provider) =>\n        filterSearch(searchQuery, provider)\n      );\n    }\n    const groupedFilters = obtainFilters();\n    for (const group in groupedFilters) {\n      let curProviders = [];\n      for (const item of groupedFilters[group]) {\n        curProviders = curProviders.concat(\n          filteredProviders.filter((provider) => provider[group] === item.name)\n        );\n      }\n      filteredProviders = curProviders;\n    }\n    const itemsCount = filteredProviders.length;\n    filteredProviders = paginate(filteredProviders, currentPage, pageSize);\n\n    return { itemsCount, data: filteredProviders };\n  };\n\n  const { itemsCount, data: pagedProviders } = getPagedData();\n  pagedProviders.map((provider) => (provider.photo = exampleImg));\n\n  const renderProviders = (pagedProviders) => {\n    return (\n      <div>\n        {!smallWindow && (\n          <div className=\"row\">\n            <div className={\"col-3\"}>\n              <CollapsibleList\n                groups={filters}\n                itemKey=\"options\"\n                onSelect={handleSelect}\n                selectedItems={selectedFilters}\n              />\n            </div>\n            <div className=\"col\">\n              <SearchBox onChange={handleSearch} />\n              {providersState.isLoading && Loading()}\n              {CardDeck(pagedProviders, smallWindow, button2)}\n              <Pagination\n                itemsCount={itemsCount}\n                pageSize={pageSize}\n                currentPage={currentPage}\n                onPageChange={handlePageChange}\n              />\n            </div>\n          </div>\n        )}\n        {smallWindow && (\n          <div>\n            <CollapsibleList\n              groups={filters}\n              itemKey=\"options\"\n              onSelect={handleSelect}\n              selectedItems={selectedFilters}\n            />\n            <SearchBox onChange={handleSearch} />\n            {providersState.isLoading && Loading()}\n            {CardDeck(pagedProviders, smallWindow, button2)}\n            <Pagination\n              itemsCount={itemsCount}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              onPageChange={handlePageChange}\n            />\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      {pagedProviders && renderProviders(pagedProviders)}\n    </div>\n  );\n}\n","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/tracking.jsx",["207","208","209","210"],"import { Button, Alert } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\n\nexport default function Tracking() {\n  return <div>{console.log()}</div>;\n}\n","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/notFound.jsx",[],"/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/records.jsx",[],"/home/arkyyang/files/webdev/tele_pain_center/src/components/UI/navBar.jsx",["211"],"import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Tracking from \"../pages/tracking\";\n\nconst NavBar = ({ user }) => {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">Tele Pain Center</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/tracking\">Tracking</Nav.Link>\n          <Nav.Link href=\"/search\">Search Providers</Nav.Link>\n          <Nav.Link href=\"/calendar\">Calendar</Nav.Link>\n          <Nav.Link href=\"/Records\">Records</Nav.Link>\n          <Nav.Link href=\"/Chat\">Chat</Nav.Link>\n          <Nav.Link href=\"/registration\">Registration</Nav.Link>\n          <Nav.Link href=\"/login\">Login</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","/home/arkyyang/files/webdev/tele_pain_center/src/services/providerService.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/services/FilterService.js",["212"],"import React from \"react\";\nconst filters = [\n  {\n    _id: \"specialty\",\n    title: \"Specialty\",\n    options: [\n      {\n        name: \"fibromyalgia\",\n        _id: \"fibromyalgia\",\n      },\n      {\n        name: \"arthritis\",\n        _id: \"arthritis\",\n      },\n      {\n        name: \"Pain Psychology\",\n        _id: \"pain_phychology\",\n      },\n      {\n        name: \"Occupational Therapy\",\n        _id: \"occupational_therapy\",\n      },\n      {\n        name: \"Physical Therapy\",\n        _id: \"physical_therapy\",\n      },\n    ],\n  },\n  {\n    _id: \"city\",\n    title: \"City\",\n    options: [\n      {\n        name: \"Mountain View\",\n        _id: \"mountain_view\",\n      },\n      {\n        name: \"Fremont\",\n        _id: \"fremont\",\n      },\n    ],\n  },\n];\nconst getFilters = () => {\n  return filters;\n};\n\nexport default getFilters;\n","/home/arkyyang/files/webdev/tele_pain_center/src/components/UI/searchBox.jsx",[],"/home/arkyyang/files/webdev/tele_pain_center/src/components/UI/CollapsibleList.jsx",[],"/home/arkyyang/files/webdev/tele_pain_center/src/components/common/cardDeck.jsx",["213"],"import React, { Component } from \"react\";\nimport CardItem from \"./cardItem\";\nconst CardDeck = (items, smallWindow, button2) => {\n  return <div>{items.map((item) => CardItem(item, smallWindow, button2))}</div>;\n};\n\nexport default CardDeck;\n","/home/arkyyang/files/webdev/tele_pain_center/src/services/data/providerData.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/components/common/cardItem.jsx",[],"/home/arkyyang/files/webdev/tele_pain_center/src/components/UI/Pagination.jsx",["214","215","216"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {currentPage > 1 && (\n          <li className=\"page-item\">\n            <a\n              className=\"page-link\"\n              aria-label=\"Previous\"\n              onClick={() => onPageChange(currentPage - 1)}\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n              <span className=\"sr-only\">Previous</span>\n            </a>\n          </li>\n        )}\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n        {currentPage < pagesCount && (\n          <li className=\"page-item\">\n            <a\n              className=\"page-link\"\n              aria-label=\"Previous\"\n              onClick={() => onPageChange(currentPage + 1)}\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n              <span className=\"sr-only\">Next</span>\n            </a>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","/home/arkyyang/files/webdev/tele_pain_center/src/utils/paginate.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/services/authService.js",["217","218","219"],"import React from \"react\";\nimport firebase from \"firebase/app\";\n\nimport { useAuth } from \"../contexts/AuthContext\";\n\nconst user = {\n  currentUser: null,\n};\n\nexport const createNewUser = async ({ email, password, username }) => {\n  await firebase.createUser({ email, password }, { username, email });\n  await login({ email, password });\n};\n\nexport const login = async ({ email, password }) => {\n  //  TODO: check whether logout without cur user is a problem\n  logout();\n  await firebase.login({\n    email,\n    password,\n  });\n};\n\nexport const logout = async () => {\n  await firebase.logout();\n};\n\nexport function GetCurrentUser() {\n  console.log(\"useAuth:\", useAuth);\n  const { currentUser } = useAuth();\n  user = { user: currentUser };\n}\n\nexport default {\n  GetCurrentUser,\n  user,\n};\n","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/Registration.jsx",["220","221"],"import React, { useRef, useState } from \"react\";\nimport { Card, Button, Form, Container, Alert } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createNewUser } from \"../../services/authService\";\n\nexport default function Registration() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const nameRef = useRef();\n  const passwordConfirmRef = useRef();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Password do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true); //disable sign up button when waiting\n      await createNewUser({\n        email: emailRef.current.value,\n        password: passwordRef.current.value,\n        username: nameRef.current.value,\n      });\n      setLoading(false);\n      history.push(\"/\");\n    } catch (err) {\n      setError(\"Failed to create an account:\", err); //,\n      setLoading(false);\n    }\n  }\n\n  return (\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      stype={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\"> Sign Up</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"email\" ref={emailRef} required />\n              </Form.Group>\n              <Form.Group id=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control type=\"name\" ref={nameRef} required />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" ref={passwordRef} required />\n              </Form.Group>\n              <Form.Group id=\"password-confirm\">\n                <Form.Label>Password Confirmation</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  ref={passwordConfirmRef}\n                  required\n                />\n              </Form.Group>\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Sign Up\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          {\"Already have an account? \"}\n          <Link to=\"/login\"> Log In</Link>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","/home/arkyyang/files/webdev/tele_pain_center/src/contexts/AuthContext.js",["222"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { auth, db } from \"../services/Firebase/firebase\";\nimport * as userActions from \"../redux/UserActions\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  const [uid, setuid] = useState(\"\");\n\n  const [providers, setproviders] = useState([]);\n\n  function signup(email, password) {\n    // line to change if change authentication method\n    auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    // line to change if change authentication method\n    auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  function getUsername(uid) {\n    db.collection(\"users\")\n      .doc(uid)\n      .get()\n      .then((doc) => {\n        setUsername(doc.data().username);\n      });\n    return;\n  }\n\n  function getProvider() {\n    const providersRef = db.collection(\"providers\");\n\n    providersRef.get().then(function (querySnapshot) {\n      let data = [];\n      querySnapshot.forEach(function (doc) {\n        // doc.data() is never undefined for query doc snapshots\n        data.push(doc.data());\n      });\n      setproviders(data);\n    });\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setuid(user.uid);\n      getUsername(user.uid);\n      setLoading(false); // do not render until have set current user\n    });\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n    uid,\n    username,\n    getProvider,\n    providers,\n  };\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n","/home/arkyyang/files/webdev/tele_pain_center/src/services/Firebase/firebase.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/Login.jsx",[],"/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/Dashboard.jsx",[],"/home/arkyyang/files/webdev/tele_pain_center/src/components/common/ProtectedRoute.jsx",[],"/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/ForgotPassword.jsx",[],"/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/UpdateProfile.jsx",["223","224"],"import React, { useRef, useState } from \"react\";\nimport { Card, Button, Form, Container, Alert } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nexport default function UpdateProfile() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { currentUser, updateEmail, updatePassword } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Password do not match\");\n    }\n    setLoading(true);\n    setError(\"\");\n    const promises = [];\n    const newEmail = emailRef.current.value;\n    const newPassword = passwordRef.current.value;\n    if (newEmail != currentUser.email) {\n      promises.push(updateEmail(newEmail));\n    }\n    if (newPassword && newPassword != currentUser.password) {\n      promises.push(updatePassword(newPassword));\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        //successful\n        setLoading(false);\n        setError(\"\");\n        history.push(\"/\");\n      })\n      .catch(() => {\n        //error\n        setError(\"Failed to create an account\");\n        setError(\"\");\n        setLoading(false);\n      })\n      .finally(() => {});\n  }\n\n  return (\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      stype={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Update Profile</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  ref={emailRef}\n                  required\n                  defaultValue={currentUser.email}\n                />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  ref={passwordRef}\n                  placeholder=\"Leave blank to keep the same\"\n                />\n              </Form.Group>\n              <Form.Group id=\"password-confirm\">\n                <Form.Label>Password Confirmation</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  ref={passwordConfirmRef}\n                  placeholder=\"Leave blank to keep the same\"\n                />\n              </Form.Group>\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Update\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          <Link to=\"/\"> Cancel </Link>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","/home/arkyyang/files/webdev/tele_pain_center/src/components/pages/Chat.jsx",["225","226","227","228","229","230"],"/home/arkyyang/files/webdev/tele_pain_center/src/components/common/Message.js",["231","232"],"import React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport \"./Message.css\";\n\nexport default function Message(props) {\n  const { message, name, isUser } = props;\n  return (\n    <div>\n      <div\n        key={`div_${message._id}`}\n        className={`message ${isUser && \"message__user\"}`}\n      >\n        {name && name}\n        <Card\n          key={`card_${message._id}`}\n          className={`message__card ${isUser && \"message__card__user\"}`}\n        >\n          {message.text}\n        </Card>\n      </div>\n    </div>\n  );\n}\n","/home/arkyyang/files/webdev/tele_pain_center/src/services/ChatService.js",["233"],"import { db } from \"./Firebase/firebase\";\nimport chatActions from \"../redux/ChatActions\";\nimport firebase from \"firebase/app\";\n\nexport const GetUser = async (uid) => {\n  const usersRef = db.collection(\"users\");\n  let data = {};\n  try {\n    const snapshot = await usersRef.doc(uid).get();\n    data = snapshot.data();\n    return data.username;\n  } catch (err) {}\n};\n\nexport const GetGroups = async (dispatch, uid) => {\n  const groupsRef = db.collection(\"groups\");\n  let groups = {};\n\n  console.log(uid);\n  try {\n    const groupsSnapShot = await groupsRef\n      .where(\"users\", \"array-contains-any\", [uid])\n      .get();\n    groupsSnapShot.forEach(async (doc) => {\n      const users = {};\n      for (const uid of doc.data().users) {\n        users[uid] = await GetUser(uid);\n      }\n      groups[doc.id] = { users, _id: doc.id, data: doc.data() };\n      chatActions.fetchGroups(dispatch, groups);\n    });\n  } catch (err) {\n    console.log(\"Group not retrieved:\", err);\n  }\n\n  return groups;\n};\n\nexport const SetCurGroup = (dispatch, curGroupId) => {\n  chatActions.fetchCurGroup(dispatch, curGroupId);\n};\n\nexport const GetMessages = async (dispatch, groupId) => {\n  var groupRef = db.collection(\"groups\").doc(groupId).collection(\"messages\");\n  let messages = [];\n  try {\n    groupRef.orderBy(\"timestamp\", \"asc\").onSnapshot((snapshot) => {\n      snapshot.docs.map((doc) => {\n        const curObject = doc.data();\n        curObject._id = doc.id;\n        messages.push(curObject);\n        chatActions.fetchMessages(dispatch, messages);\n      });\n    });\n  } catch (err) {\n    console.log(\"Message not retrieved, \", err);\n  }\n\n  return [...messages];\n};\n\nexport const SendMessages = async (dispatch, groupId, uid, text) => {\n  var groupRef = db.collection(\"groups\").doc(groupId).collection(\"messages\");\n  try {\n    const message = {\n      uid: uid,\n      text: text,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    };\n    groupRef.add(message);\n  } catch (err) {\n    console.log(\"Message not sent, \", err);\n  }\n\n  return;\n};\n","/home/arkyyang/files/webdev/tele_pain_center/src/redux/configureStore.js",["234"],"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { filtersReducer } from \"./filtersReducer\";\nimport { providersReducer } from \"./providersReducer\";\nimport { messagesReducer } from \"./messagesReducer\";\nimport { chatGroupsReducer } from \"./chatGroupsReducer\";\nimport { curGroupReducer } from \"./curGroupReducer\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nexport const ConfigureStore = () => {\n  const store = createStore(\n    combineReducers({\n      providersState: providersReducer,\n      filters: filtersReducer,\n      messagesState: messagesReducer,\n      chatGroupsState: chatGroupsReducer,\n      curGroup: curGroupReducer,\n      firebase: firebaseReducer,\n    }),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n  applyMiddleware(thunk, logger);\n  return store;\n};\n","/home/arkyyang/files/webdev/tele_pain_center/src/redux/filtersReducer.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/redux/providersReducer.js",["235"],"import { PROVIDERS } from \"../services/data/providerData\";\nimport * as ActionTypes from \"./ActionTypes\";\n\nconst PROVIDERSSTATE = {\n  isLoading: false,\n  err: null,\n  providers: [],\n};\n\nexport const providersReducer = (state = PROVIDERSSTATE, action) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_PROVIDERS:\n      return {\n        ...state,\n        isLoading: false,\n        err: null,\n        providers: action.payload,\n      };\n    case ActionTypes.PROVIDERS_LOADING:\n      return { ...state, isLoading: true, err: null, providers: [] };\n    case ActionTypes.PROVIDERS_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        err: action.payload,\n        providers: [],\n      };\n    default:\n      return state;\n  }\n};\n","/home/arkyyang/files/webdev/tele_pain_center/src/services/data/filtersData.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/redux/ActionTypes.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/components/common/Loading.jsx",[],"/home/arkyyang/files/webdev/tele_pain_center/src/redux/ProvidersActions.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/redux/ProvidersActionCreators.js",["236","237"],"import * as ActionTypes from \"./ActionTypes\";\nimport { PROVIDERS } from \"../services/data/providerData\";\n\nimport GetProviders from \"../services/providerService\";\n\n// TODO: should we call servce from action or call action from service?\nexport const fetchProviders = async (dispatch, data) => {\n  dispatch(providersLoading(true));\n  dispatch(addProviders(data));\n};\n\nexport const addProviders = (providers) => ({\n  type: ActionTypes.FETCH_PROVIDERS,\n  payload: providers,\n});\n\nexport const providersLoading = (isLoading) => ({\n  type: ActionTypes.PROVIDERS_LOADING,\n  payload: isLoading,\n});\n\nexport const providersFailed = (err) => ({\n  type: ActionTypes.PROVIDERS_FAILED,\n  payload: err,\n});\n","/home/arkyyang/files/webdev/tele_pain_center/src/redux/messagesReducer.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/redux/chatGroupsReducer.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/redux/ChatActions.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/redux/ChatActionCreator.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/redux/curGroupReducer.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/redux/UserActions.js",[],"/home/arkyyang/files/webdev/tele_pain_center/src/redux/UserActionCreator.js",[],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":17,"column":10,"nodeType":"244","messageId":"245","endLine":17,"endColumn":22},{"ruleId":"242","severity":1,"message":"246","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":26},{"ruleId":"242","severity":1,"message":"247","line":6,"column":8,"nodeType":"244","messageId":"245","endLine":6,"endColumn":18},{"ruleId":"242","severity":1,"message":"248","line":12,"column":10,"nodeType":"244","messageId":"245","endLine":12,"endColumn":12},{"ruleId":"242","severity":1,"message":"249","line":13,"column":8,"nodeType":"244","messageId":"245","endLine":13,"endColumn":23},{"ruleId":"242","severity":1,"message":"250","line":17,"column":10,"nodeType":"244","messageId":"245","endLine":17,"endColumn":19},{"ruleId":"242","severity":1,"message":"251","line":32,"column":20,"nodeType":"244","messageId":"245","endLine":32,"endColumn":31},{"ruleId":"242","severity":1,"message":"252","line":33,"column":19,"nodeType":"244","messageId":"245","endLine":33,"endColumn":29},{"ruleId":"253","severity":1,"message":"254","line":43,"column":6,"nodeType":"255","endLine":43,"endColumn":8,"suggestions":"256"},{"ruleId":"257","severity":1,"message":"258","line":81,"column":15,"nodeType":"259","messageId":"260","endLine":81,"endColumn":17},{"ruleId":"242","severity":1,"message":"261","line":1,"column":10,"nodeType":"244","messageId":"245","endLine":1,"endColumn":16},{"ruleId":"242","severity":1,"message":"262","line":1,"column":18,"nodeType":"244","messageId":"245","endLine":1,"endColumn":23},{"ruleId":"242","severity":1,"message":"263","line":2,"column":17,"nodeType":"244","messageId":"245","endLine":2,"endColumn":25},{"ruleId":"242","severity":1,"message":"264","line":2,"column":27,"nodeType":"244","messageId":"245","endLine":2,"endColumn":36},{"ruleId":"242","severity":1,"message":"265","line":5,"column":8,"nodeType":"244","messageId":"245","endLine":5,"endColumn":16},{"ruleId":"242","severity":1,"message":"266","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},{"ruleId":"242","severity":1,"message":"246","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":26},{"ruleId":"267","severity":1,"message":"268","line":15,"column":13,"nodeType":"269","endLine":19,"endColumn":14},{"ruleId":"267","severity":1,"message":"268","line":30,"column":13,"nodeType":"269","endLine":30,"endColumn":73},{"ruleId":"267","severity":1,"message":"268","line":37,"column":13,"nodeType":"269","endLine":41,"endColumn":14},{"ruleId":"242","severity":1,"message":"266","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},{"ruleId":"270","severity":1,"message":"271","line":31,"column":3,"nodeType":"244","messageId":"272","endLine":31,"endColumn":7},{"ruleId":"273","severity":1,"message":"274","line":34,"column":1,"nodeType":"275","endLine":37,"endColumn":3},{"ruleId":"242","severity":1,"message":"276","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":21},{"ruleId":"242","severity":1,"message":"277","line":4,"column":23,"nodeType":"244","messageId":"245","endLine":4,"endColumn":34},{"ruleId":"242","severity":1,"message":"278","line":3,"column":13,"nodeType":"244","messageId":"245","endLine":3,"endColumn":24},{"ruleId":"257","severity":1,"message":"258","line":25,"column":18,"nodeType":"259","messageId":"260","endLine":25,"endColumn":20},{"ruleId":"257","severity":1,"message":"258","line":28,"column":36,"nodeType":"259","messageId":"260","endLine":28,"endColumn":38},{"ruleId":"242","severity":1,"message":"279","line":2,"column":18,"nodeType":"244","messageId":"245","endLine":2,"endColumn":22},{"ruleId":"242","severity":1,"message":"280","line":19,"column":9,"nodeType":"244","messageId":"245","endLine":19,"endColumn":17},{"ruleId":"253","severity":1,"message":"281","line":31,"column":6,"nodeType":"255","endLine":31,"endColumn":14,"suggestions":"282"},{"ruleId":"257","severity":1,"message":"283","line":51,"column":30,"nodeType":"259","messageId":"260","endLine":51,"endColumn":32},{"ruleId":"284","severity":1,"message":"285","line":64,"column":15,"nodeType":"269","endLine":68,"endColumn":17},{"ruleId":"284","severity":1,"message":"285","line":72,"column":15,"nodeType":"269","endLine":76,"endColumn":17},{"ruleId":"242","severity":1,"message":"264","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":26},{"ruleId":"242","severity":1,"message":"263","line":1,"column":28,"nodeType":"244","messageId":"245","endLine":1,"endColumn":36},{"ruleId":"286","severity":1,"message":"287","line":48,"column":31,"nodeType":"288","messageId":"289","endLine":48,"endColumn":33},{"ruleId":"242","severity":1,"message":"290","line":1,"column":57,"nodeType":"244","messageId":"245","endLine":1,"endColumn":64},{"ruleId":"242","severity":1,"message":"250","line":1,"column":10,"nodeType":"244","messageId":"245","endLine":1,"endColumn":19},{"ruleId":"242","severity":1,"message":"250","line":2,"column":10,"nodeType":"244","messageId":"245","endLine":2,"endColumn":19},{"ruleId":"242","severity":1,"message":"291","line":4,"column":8,"nodeType":"244","messageId":"245","endLine":4,"endColumn":20},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'getFilters' is defined but never used.","'db' is defined but never used.","'providerActions' is defined but never used.","'PROVIDERS' is defined but never used.","'setPageSize' is assigned a value but never used.","'setButton2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["294"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","'Alert' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Tracking' is defined but never used.","'React' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-const-assign","'user' is constant.","const","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'userActions' is defined but never used.","'Form' is defined but never used.","'curGroup' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'curGroupId' and 'dispatch'. Either include them or remove the dependency array.",["295"],"Expected '===' and instead saw '=='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'compose' is defined but never used.","'GetProviders' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [dispatch]",{"range":"300","text":"301"},"Update the dependencies array to be: [curGroupId, curUid, dispatch]",{"range":"302","text":"303"},[1622,1624],"[dispatch]",[1056,1064],"[curGroupId, curUid, dispatch]"]